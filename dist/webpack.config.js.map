{"version":3,"sources":["../webpack.config.js"],"names":["module","exports","entry","output","path","__dirname","filename","publicPath","devtool","devServer","hot","contentBase","rules","test","loader","options","loaders","css","extract","use","fallback","exclude","limit","name","resolve","modules","extensions","plugins","HotModuleReplacementPlugin","NamedModulesPlugin","template"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AACAA,OAAOC,OAAP,GAAiB;AACf;AACAC,SAAO,CAAC,+BAAD,EAAkC,gBAAlC,CAFQ;AAGf;AACA;AACA;AACAC,UAAQ;AACNC,UAAM,mBAAQC,SAAR,EAAmB,OAAnB,CADA;AAENC,cAAU,WAFJ;AAGNC,gBAAY;AAHN,GANO;AAWfC,WAAS,iBAXM;AAYfC,aAAW;AACTC,SAAK,IADI;AAET;AACAC,iBAAa,mBAAQN,SAAR,EAAmB,OAAnB;AAHJ,GAZI;AAiBfL,UAAQ;AACNY,WAAO,CACL;AACEC,YAAM,QADR;AAEEC,cAAQ,YAFV;AAGEC,eAAS;AACPC,iBAAS;AACPC,eAAK,mCAAkBC,OAAlB,CAA0B;AAC7BC,iBAAK,YADwB;AAE7BC,sBAAU,kBAFmB,CAEA;AAFA,WAA1B;AADE;AADF;AAHX,KADK,EAaL;AACEP,YAAM,OADR;AAEEM,WAAK,CACH,cADG,CAFP;AAKEE,eAAS;AALX,KAbK,EAoBL;AACER,YAAM,SADR;AAEEM,WAAK;AAFP,KApBK;;AAyBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEN,YAAM,2BADR;AAEEM,WAAK,CACH;AACEL,gBAAQ,YADV,EACwBC,SAAS,EAAEO,OAAO,IAAT,EAAeC,MAAM,oBAArB;AADjC,OADG;AAFP,KAhCK;AADD,GAjBO;AA4DfC,WAAS;AACPC,aAAS,CACP,cADO,CADF;AAKPC,gBAAY,CAAC,KAAD,EAAQ,MAAR;AALL,GA5DM;AAmEf;AACA;AACA;AACAC,WAAS,CACP,IAAI,kBAAQC,0BAAZ,EADO,EAEP,IAAI,kBAAQC,kBAAZ,EAFO,EAGP,gCAAsB,EAAEC,UAAU,sBAAZ,EAAtB,CAHO,EAIP,uCAAsB,WAAtB;;AAEA;AANO;AAtEM,CAAjB","file":"webpack.config.js","sourcesContent":["import { resolve } from \"path\";\r\nimport webpack from \"webpack\";\r\nimport HtmlWebpackPlugin from \"html-webpack-plugin\";\r\nimport ExtractTextPlugin from \"extract-text-webpack-plugin\";\r\nmodule.exports = {\r\n  // context: resolve(__dirname, \"src\"),\r\n  entry: ['webpack-hot-middleware/client', \"./src/index.js\",],\r\n  // entry: {\r\n  //   app: \"./index.js\" \r\n  // },\r\n  output: {\r\n    path: resolve(__dirname, \"build\"),\r\n    filename: '[name].js',\r\n    publicPath: '/dist/',\r\n  },\r\n  devtool: 'eval-source-map',\r\n  devServer: {\r\n    hot: true,\r\n    // enable HMR on the server\r\n    contentBase: resolve(__dirname, 'build'),\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.vue$/,\r\n        loader: 'vue-loader',\r\n        options: {\r\n          loaders: {\r\n            css: ExtractTextPlugin.extract({\r\n              use: 'css-loader',\r\n              fallback: 'vue-style-loader' // <- this is a dep of vue-loader, so no need to explicitly install if using npm3\r\n            })\r\n          }\r\n        }\r\n      },\r\n      {\r\n        test: /\\.js$/,\r\n        use: [\r\n          'babel-loader',\r\n        ],\r\n        exclude: /node_modules/\r\n      },\r\n      {\r\n        test: /\\.json$/,\r\n        use: 'json-loader'\r\n      },\r\n\r\n      // {\r\n      //   test: /\\.css$/,\r\n      //   use: [\r\n      //     { loader: \"style-loader\" },\r\n      //     { loader: \"css-loader\" },\r\n      //   ]\r\n      // }\r\n      {\r\n        test: /\\.(jpg|jpeg|png|gif|svg)$/,\r\n        use: [\r\n          {\r\n            loader: \"url-loader\", options: { limit: 2000, name: \"[path][name].[ext]\" }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  resolve: {\r\n    modules: [\r\n      \"node_modules\",\r\n      // path.resolve(__dirname, \"app\")\r\n    ],\r\n    extensions: [\".js\", \".vue\"],\r\n  },\r\n  //   externals : {\r\n  //   vue: {commonjs2:'vue'}\r\n  // },\r\n  plugins: [\r\n    new webpack.HotModuleReplacementPlugin(),\r\n    new webpack.NamedModulesPlugin(),\r\n    new HtmlWebpackPlugin({ template: './src/index.tpl.html' }),\r\n    new ExtractTextPlugin(\"style.css\")\r\n\r\n    // prints more readable module names in the browser console on HMR updates\r\n  ],\r\n}"]}