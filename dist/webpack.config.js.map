{"version":3,"sources":["../webpack.config.js"],"names":["module","exports","context","__dirname","entry","output","path","filename","publicPath","devtool","devServer","hot","contentBase","stats","rules","test","use","exclude","loader","options","loaders","css","extract","fallback","limit","name","plugins","HotModuleReplacementPlugin","NamedModulesPlugin","template"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AACAA,OAAOC,OAAP,GAAiB;AACfC,WAAS,mBAAQC,SAAR,EAAmB,KAAnB,CADM;AAEfC,SAAO,CAAC,2CAAD,EAA8C,YAA9C,CAFQ;AAGfC,UAAQ;AACNC,UAAM,mBAAQH,SAAR,EAAmB,OAAnB,CADA;AAENI,cAAU,WAFJ;AAGNC,gBAAY;AAHN,GAHO;AAQbC,WAAS,kBARI;AASfC,aAAW;AACTC,SAAK,IADI;AAET;;AAEAC,iBAAa,mBAAQT,SAAR,EAAmB,OAAnB,CAJJ;AAKT;AACAU,WAAO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AANE,GATI;AA6Bfb,UAAQ;AACNc,WAAO,CACL;AACEC,YAAM,OADR;AAEEC,WAAK,CACH,cADG,CAFP;AAKEC,eAAS;AALX,KADK,EAQH;AACIF,YAAM,QADV;AAEIG,cAAQ,YAFZ;AAGIC,eAAS;AACLC,iBAAS;AACLC,eAAK,mCAAkBC,OAAlB,CAA0B;AAC3BN,iBAAK,YADsB;AAE3BO,sBAAU,kBAFiB,CAEE;AAFF,WAA1B;AADA;AADJ;AAHb,KARG;AAoBL;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACCR,YAAM,2BADP;AAECC,WAAK,CACH;AACEE,gBAAQ,YADV,EACwBC,SAAS,EAAEK,OAAO,IAAT,EAAeC,MAAM,oBAArB;AADjC,OADG;AAFN,KA3BI;AADD,GA7BO;;AAoEfC,WAAS,CACP,IAAI,kBAAQC,0BAAZ,EADO,EAEP,IAAI,kBAAQC,kBAAZ,EAFO,EAGP,gCAAsB,EAACC,UAAU,cAAX,EAAtB,CAHO,EAIP,uCAAsB,WAAtB;;AAEA;AANO;AApEM,CAAjB","file":"webpack.config.js","sourcesContent":["import { resolve } from \"path\";\r\nimport webpack from \"webpack\";\r\nimport HtmlWebpackPlugin from \"html-webpack-plugin\";\r\nimport ExtractTextPlugin from \"extract-text-webpack-plugin\";\r\nmodule.exports = {\r\n  context: resolve(__dirname, \"src\"),\r\n  entry: ['webpack-hot-middleware/client?reload=true', \"./index.js\",],\r\n  output: {\r\n    path: resolve(__dirname, \"build\"),\r\n    filename: '[name].js',\r\n    publicPath: '/' \r\n  },\r\n    devtool: '#eval-source-map',\r\n  devServer: {\r\n    hot: true,\r\n    // enable HMR on the server\r\n\r\n    contentBase: resolve(__dirname, 'build'),\r\n    // match the output path\r\n    stats: {\r\n      // assets: true,\r\n      // children: false,\r\n      // chunks: false,\r\n      // // hash: false,\r\n      // modules: false,\r\n      // publicPath: false,\r\n      // timings: true,\r\n      // version: false,\r\n      // warnings: true,\r\n      // colors: {green: '\\u001b[32m',}\r\n    },\r\n    // match the output `publicPath`\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.js$/,\r\n        use: [\r\n          'babel-loader',\r\n        ],\r\n        exclude: /node_modules/\r\n      },\r\n        {\r\n            test: /\\.vue$/,\r\n            loader: 'vue-loader',\r\n            options: {\r\n                loaders: {\r\n                    css: ExtractTextPlugin.extract({\r\n                        use: 'css-loader',\r\n                        fallback: 'vue-style-loader' // <- this is a dep of vue-loader, so no need to explicitly install if using npm3\r\n                    })\r\n                }\r\n            }\r\n        },\r\n      // {\r\n      //   test: /\\.css$/,\r\n      //   use: [\r\n      //     { loader: \"style-loader\" },\r\n      //     { loader: \"css-loader\" },\r\n      //   ]\r\n      // }\r\n       {\r\n        test: /\\.(jpg|jpeg|png|gif|svg)$/,\r\n        use: [\r\n          {\r\n            loader: \"url-loader\", options: { limit: 2000, name: \"[path][name].[ext]\" }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  plugins: [\r\n    new webpack.HotModuleReplacementPlugin(),\r\n    new webpack.NamedModulesPlugin(),\r\n    new HtmlWebpackPlugin({template: './index.html' }),\r\n    new ExtractTextPlugin(\"style.css\")\r\n\r\n    // prints more readable module names in the browser console on HMR updates\r\n  ],\r\n}"]}